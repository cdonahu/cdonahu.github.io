install.packages("usethis")
library(usethis)
use_git_config(user.name = "Claudia Donahue", user.email = "claudialdonahue@gmail.com")
usethis::create_github_token()
gitcreds::gitcreds_set()
knitr::opts_chunk$set(echo = TRUE)
plot(iris)
library(rmarkdown)
rmarkdown::render('./_Rmd/2022-06-06-Programming-Background-blog-post.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
library(rmarkdown)
rmarkdown::render('./_Rmd/2022-06-06-Programming-Background-blog-post.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
rmarkdown::render('./_Rmd/2022-06-06-Programming-Background-blog-post.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
rmarkdown::render('./_Rmd/2022-06-06-Programming-Background-blog-post.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.path = "../images/")
plot(cars)
?cars
plot(cars, xlab = "Speed (mph)", ylab = "Stopping distance (ft)",
las = 1, xlim = c(0, 25))
rmarkdown::render('./_Rmd/2022-06-06-Programming-Background-blog-post.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
rmarkdown::render('./_Rmd/2022-06-06-Programming-Background-blog-post.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
library(rmarkdown)
rmarkdown::render('./_Rmd/2022-06-26-Vignette-blog-post.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
rmarkdown::render('./_Rmd/2022-06-26-Vignette-blog-post.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
rmarkdown::render('./_Rmd/2022-06-26-Vignette-blog-post.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
rmarkdown::render('./_Rmd/2022-06-26-Vignette-blog-post.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
library(rmarkdown)
rmarkdown::render('./_Rmd/2022-06-26-Vignette-blog-post.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.path = "../images/")
tStat <- function(vec, mean){
tObs <- (mean(vec) - mean) / (sd(vec)/sqrt(length(vec)))
return(tObs)
}
library(rmarkdown)
rmarkdown::render('./_Rmd/2022-06-27-Third-blog-post.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
library(rmarkdown)
rmarkdown::render('./_Rmd/2022-07-08-Automating-R-Markdown.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
knitr::opts_chunk$set(echo = TRUE)
crash <- readr::read_csv(file = "BikePedCrash.csv",
#show_col_types = FALSE
)
crash <- readr::read_csv(file = "./_data/BikePedCrash.csv",
#show_col_types = FALSE
)
setwd("~/Documents/00 MOR/ST 558 Data Science for Statisticians/Blog/cdonahu.github.io")
crash <- readr::read_csv(file = "./_data/BikePedCrash.csv",
#show_col_types = FALSE
)
crash <- readr::read_csv(file = "../_data/BikePedCrash.csv",
#show_col_types = FALSE
)
crash <- readr::read_csv(file = "../_data/BikePedCrash.csv",
show_col_types = FALSE
)
summary(crash)
View(crash)
summary(crash$CrashSevr)
sum(is.na(crash))
Titanic
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.path = paste("./", channel, "_images/", sep = ""))
data("Titanic")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_chunk$set(fig.path = paste("./", channel, "_images/", sep = ""))
Titanic
install.packages("titanic")
library(titanic)
library(titanic)
training <- titanic_train
testing <- titanic_test
library(titanic)
training <- titanic_train
training$Survived <- factor(training$Survived)
levels(training$Survived) <- list("Died" = 0, "Survived" = 1)
fit <- train(x = training[,3:12],
y = training[,2],
method = "rpart",
preProcess = c("center", "scale"),
cp = 0.001,
trControl = trainControl(method = "cv",
number = 3)
)
library(caret)
fit <- train(x = training[,3:12],
y = training[,2],
method = "rpart",
preProcess = c("center", "scale"),
cp = 0.001,
trControl = trainControl(method = "cv",
number = 3)
)
library(titanic)
training <- titanic_train
# survived/sex/embarked asfactor variables
training$Survived <- factor(training$Survived)
levels(training$Survived) <- list("Died" = 0, "Survived" = 1)
training$Sex <- factor(training$Sex)
training$Embarked <- factor(training$Embarked)
# Drop columns that are not numeric/helpful
training <- dplyr::select(training, -c(Name, Ticket, Cabin))
library(caret)
fit <- train(x = training[,3:9],
y = training[,2],
method = "rpart",
preProcess = c("center", "scale"),
cp = 0.001,
trControl = trainControl(method = "cv",
number = 3)
)
fit
plot(fit)
library(caret)
fit <- train(x = training[,3:9],
y = training[,2],
method = "rpart",
preProcess = c("center", "scale"),
cp = 0.001,
trControl = trainControl(method = "cv",
number = 3)
)
# load the repart.plot libary
library(rpart.plot)
# plot the classification tree
rpart.plot::rpart.plot(fit)
library(titanic)
training <- titanic_train
# survived/sex/embarked asfactor variables
training$Survived <- factor(training$Survived)
training$Sex <- factor(training$Sex)
training$Embarked <- factor(training$Embarked)
# Label the levels of Survived for clarity
levels(training$Survived) <- list("Died" = 0, "Survived" = 1)
# Drop columns that are not numeric/helpful
training <- dplyr::select(PassengerId, training, -c(Name, Ticket, Cabin))
library(titanic)
training <- titanic_train
# survived/sex/embarked asfactor variables
training$Survived <- factor(training$Survived)
training$Sex <- factor(training$Sex)
training$Embarked <- factor(training$Embarked)
# Label the levels of Survived for clarity
levels(training$Survived) <- list("Died" = 0, "Survived" = 1)
# Drop columns that are not numeric/helpful
training <- dplyr::select(training, -c(PassengerId, Name, Ticket, Cabin))
fitTree <- rpart::rpart(Survived ~., data = training,
method = "class",
cp = 0.001)
# load the repart.plot libary
library(rpart.plot)
# plot the classification tree
rpart.plot::rpart.plot(fitTree)
library(caret)
fit <- train(x = training[,3:9],
y = training[,2],
method = "rpart",
preProcess = c("center", "scale"),
cp = 0.001,
trControl = trainControl(method = "cv",
number = 3)
)
library(caret)
fit <- train(x = training[,2:8],
y = training[,1],
method = "rpart",
preProcess = c("center", "scale"),
cp = 0.001,
trControl = trainControl(method = "cv",
number = 3)
)
# Plot the tree
library(rattle)
install.packages("rattle")
library(caret)
fit <- train(x = training[,2:8],
y = training[,1],
method = "rpart",
preProcess = c("center", "scale"),
cp = 0.001,
trControl = trainControl(method = "cv",
number = 3)
)
# Plot the tree
library(rattle)
fancyRpartPlot(fit$finalModel)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.path = './_images/')
library(caret)
fit <- train(x = training[,2:8],
y = training[,1],
method = "rpart",
preProcess = c("center", "scale"),
cp = 0.0001,
trControl = trainControl(method = "cv",
number = 3)
)
# Plot the tree using the rattle package
library(rattle)
fancyRpartPlot(fit$finalModel)
library(rmarkdown)
rmarkdown::render('./_Rmd/2022-07-14-Machine-Learning.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
setwd("~/Documents/00 MOR/ST 558 Data Science for Statisticians/Blog/cdonahu.github.io")
library(rmarkdown)
rmarkdown::render('./_Rmd/2022-07-14-Machine-Learning.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
library(rmarkdown)
rmarkdown::render('./_Rmd/2022-07-14-Machine-Learning.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
library(rmarkdown)
rmarkdown::render('./_Rmd/2022-07-14-Machine-Learning.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
library(rmarkdown)
rmarkdown::render('./_Rmd/2022-07-14-Machine-Learning.Rmd',
output_format = 'github_document',
output_dir = './_posts/',
output_options = list(
df_print = 'default',
html_preview = FALSE # to remove .html file creation
)
)
